/**
 * Created by shenma on 2017/5/10.
 * 像iphone的通讯录一样有字母分类
 */
 /* eslint-disable */
// import $ from 'webpack-zepto';
export default function(a) {
  // 异步加载模块  不打包在一个文件里面
  require.ensure([], function(require) {
      var $ = require('webpack-zepto');
      // require('../../../../static/js/zepto.fn.js');
      ;(function($, undefined){
        var prefix = '', eventPrefix,
          vendors = { Webkit: 'webkit', Moz: '', O: 'o' },
          testEl = document.createElement('div'),
          supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,
          transform,
          transitionProperty, transitionDuration, transitionTiming, transitionDelay,
          animationName, animationDuration, animationTiming, animationDelay,
          cssReset = {}

        function dasherize(str) { return str.replace(/([A-Z])/g, '-$1').toLowerCase() }
        function normalizeEvent(name) { return eventPrefix ? eventPrefix + name : name.toLowerCase() }

        if (testEl.style.transform === undefined) $.each(vendors, function(vendor, event){
          if (testEl.style[vendor + 'TransitionProperty'] !== undefined) {
            prefix = '-' + vendor.toLowerCase() + '-'
            eventPrefix = event
            return false
          }
        })

        transform = prefix + 'transform'
        cssReset[transitionProperty = prefix + 'transition-property'] =
          cssReset[transitionDuration = prefix + 'transition-duration'] =
            cssReset[transitionDelay    = prefix + 'transition-delay'] =
              cssReset[transitionTiming   = prefix + 'transition-timing-function'] =
                cssReset[animationName      = prefix + 'animation-name'] =
                  cssReset[animationDuration  = prefix + 'animation-duration'] =
                    cssReset[animationDelay     = prefix + 'animation-delay'] =
                      cssReset[animationTiming    = prefix + 'animation-timing-function'] = ''

        $.fx = {
          off: (eventPrefix === undefined && testEl.style.transitionProperty === undefined),
          speeds: { _default: 400, fast: 200, slow: 600 },
          cssPrefix: prefix,
          transitionEnd: normalizeEvent('TransitionEnd'),
          animationEnd: normalizeEvent('AnimationEnd')
        }

        $.fn.animate = function(properties, duration, ease, callback, delay){
          if ($.isFunction(duration))
            callback = duration, ease = undefined, duration = undefined
          if ($.isFunction(ease))
            callback = ease, ease = undefined
          if ($.isPlainObject(duration))
            ease = duration.easing, callback = duration.complete, delay = duration.delay, duration = duration.duration
          if (duration) duration = (typeof duration == 'number' ? duration :
              ($.fx.speeds[duration] || $.fx.speeds._default)) / 1000
          if (delay) delay = parseFloat(delay) / 1000
          return this.anim(properties, duration, ease, callback, delay)
        }

        $.fn.anim = function(properties, duration, ease, callback, delay){
          var key, cssValues = {}, cssProperties, transforms = '',
            that = this, wrappedCallback, endEvent = $.fx.transitionEnd,
            fired = false

          if (duration === undefined) duration = $.fx.speeds._default / 1000
          if (delay === undefined) delay = 0
          if ($.fx.off) duration = 0

          if (typeof properties == 'string') {
            // keyframe animation
            cssValues[animationName] = properties
            cssValues[animationDuration] = duration + 's'
            cssValues[animationDelay] = delay + 's'
            cssValues[animationTiming] = (ease || 'linear')
            endEvent = $.fx.animationEnd
          } else {
            cssProperties = []
            // CSS transitions
            for (key in properties)
              if (supportedTransforms.test(key)) transforms += key + '(' + properties[key] + ') '
              else cssValues[key] = properties[key], cssProperties.push(dasherize(key))

            if (transforms) cssValues[transform] = transforms, cssProperties.push(transform)
            if (duration > 0 && typeof properties === 'object') {
              cssValues[transitionProperty] = cssProperties.join(', ')
              cssValues[transitionDuration] = duration + 's'
              cssValues[transitionDelay] = delay + 's'
              cssValues[transitionTiming] = (ease || 'linear')
            }
          }

          wrappedCallback = function(event){
            if (typeof event !== 'undefined') {
              if (event.target !== event.currentTarget) return // makes sure the event didn't bubble from "below"
              $(event.target).unbind(endEvent, wrappedCallback)
            } else
              $(this).unbind(endEvent, wrappedCallback) // triggered by setTimeout

            fired = true
            $(this).css(cssReset)
            callback && callback.call(this)
          }
          if (duration > 0){
            this.bind(endEvent, wrappedCallback)
            // transitionEnd is not always firing on older Android phones
            // so make sure it gets fired
            setTimeout(function(){
              if (fired) return
              wrappedCallback.call(that)
            }, ((duration + delay) * 1000) + 25)
          }

          // trigger page reflow so new elements can animate
          this.size() && this.get(0).clientLeft

          this.css(cssValues)

          if (duration <= 0) setTimeout(function() {
            that.each(function(){ wrappedCallback.call(this) })
          }, 0)

          return this
        }

        testEl = null
      })($);
      (function ($, undefined) {
        var document = window.document, docElem = document.documentElement, origShow = $.fn.show, origHide = $.fn.hide,
          origToggle = $.fn.toggle;

        function anim(el, speed, opacity, scale, callback) {
          if (typeof speed == "function" && !callback) {
            callback = speed, speed = undefined
          }
          var props = {opacity: opacity};
          if (scale) {
            props.scale = scale;
            el.css($.fx.cssPrefix + "transform-origin", "0 0")
          }
          return el.animate(props, speed, null, callback)
        }

        function hide(el, speed, scale, callback) {
          return anim(el, speed, 0, scale, function () {
            origHide.call($(this));
            callback && callback.call(this)
          })
        }

        $.fn.show = function (speed, callback) {
          origShow.call(this);
          if (speed === undefined) {
            speed = 0
          } else {
            this.css("opacity", 0)
          }
          return anim(this, speed, 1, "1,1", callback)
        };
        $.fn.hide = function (speed, callback) {
          if (speed === undefined) {
            return origHide.call(this)
          } else {
            return hide(this, speed, "0,0", callback)
          }
        };
        $.fn.toggle = function (speed, callback) {
          if (speed === undefined || typeof speed == "boolean") {
            return origToggle.call(this, speed)
          } else {
            return this.each(function () {
              var el = $(this);
              el[el.css("display") == "none" ? "show" : "hide"](speed, callback)
            })
          }
        };
        $.fn.fadeTo = function (speed, opacity, callback) {
          return anim(this, speed, opacity, null, callback)
        };
        $.fn.fadeIn = function (speed, callback) {
          var target = this.css("opacity");
          if (target > 0) {
            this.css("opacity", 0)
          } else {
            target = 1
          }
          return origShow.call(this).fadeTo(speed, target, callback)
        };
        $.fn.fadeOut = function (speed, callback) {
          return hide(this, speed, null, callback)
        };
        $.fn.fadeToggle = function (speed, callback) {
          return this.each(function () {
            var el = $(this);
            el[(el.css("opacity") == 0 || el.css("display") == "none") ? "fadeIn" : "fadeOut"](speed, callback)
          })
        }
      })($);
      $.fn.blScrollTo = function(options) {
        var defaults = {
          toT: 0, //滚动目标位置
          durTime: 500, //过渡动画时间
          delay: 30, //定时器时间
          callback: null //回调函数
        };
        var opts = $.extend(defaults, options),
          timer = null,
          _this = this,
          curTop = _this.scrollTop(), //滚动条当前的位置
          subTop = opts.toT - curTop, //滚动条目标位置和当前位置的差值
          index = 0,
          dur = Math.round(opts.durTime / opts.delay),
          smoothScroll = function(t) {
            index++;
            var per = Math.round(subTop / dur);
            if (index >= dur) {
              _this.scrollTop(t);
              window.clearInterval(timer);
              if (opts.callback && typeof opts.callback == 'function') {
                opts.callback();
              }
              return;
            } else {
              _this.scrollTop(curTop + index * per);
            }
          };
        timer = window.setInterval(function() {
          smoothScroll(opts.toT);
        }, opts.delay);
        return _this;
      };

      var strChineseFirstPY = "";
      var oMultiDiff = {
          "19969": "DZ",
          "19975": "WM",
          "19988": "QJ",
          "20048": "YL",
          "20056": "SC",
          "20060": "NM",
          "20094": "QG",
          "20127": "QJ",
          "20167": "QC",
          "20193": "YG",
          "20250": "KH",
          "20256": "CZ",
          "20282": "SC",
          "20285": "QJG",
          "20291": "TD",
          "20314": "YD",
          "20340": "NE",
          "20375": "TD",
          "20389": "YJ",
          "20391": "CZ",
          "20415": "PB",
          "20446": "YS",
          "20447": "SQ",
          "20504": "TC",
          "20608": "KG",
          "20854": "QJ",
          "20857": "CZ",
          "20911": "PF",
          "20985": "AW",
          "21032": "PB",
          "21048": "XQ",
          "21049": "SC",
          "21089": "YS",
          "21119": "JC",
          "21242": "SB",
          "21273": "SC",
          "21305": "YP",
          "21306": "QO",
          "21330": "CZ",
          "21333": "SDC",
          "21345": "QK",
          "21378": "CA",
          "21397": "SC",
          "21414": "XS",
          "21442": "SC",
          "21477": "JG",
          "21480": "TD",
          "21484": "ZS",
          "21494": "YX",
          "21505": "YX",
          "21512": "HG",
          "21523": "XH",
          "21537": "PB",
          "21542": "PF",
          "21549": "KH",
          "21571": "E",
          "21574": "DA",
          "21588": "TD",
          "21589": "O",
          "21618": "CZ",
          "21621": "KHA",
          "21632": "ZJ",
          "21654": "KG",
          "21679": "LKG",
          "21683": "KH",
          "21710": "A",
          "21719": "YH",
          "21734": "WOE",
          "21769": "A",
          "21780": "WN",
          "21804": "XH",
          "21834": "A",
          "21899": "ZD",
          "21903": "RN",
          "21908": "WO",
          "21939": "CZ",
          "21956": "SA",
          "21964": "YA",
          "21970": "TD",
          "22003": "A",
          "22031": "JG",
          "22040": "XS",
          "22060": "CZ",
          "22066": "CZ",
          "22079": "MH",
          "22129": "XJ",
          "22179": "XA",
          "22237": "NJ",
          "22244": "TD",
          "22280": "JQ",
          "22300": "YH",
          "22313": "XW",
          "22331": "YQ",
          "22343": "YJ",
          "22351": "PH",
          "22395": "DC",
          "22412": "TD",
          "22484": "PB",
          "22500": "PB",
          "22534": "ZD",
          "22549": "DH",
          "22561": "PB",
          "22612": "TD",
          "22771": "KQ",
          "22831": "HB",
          "22841": "JG",
          "22855": "QJ",
          "22865": "XQ",
          "23013": "ML",
          "23081": "WM",
          "23487": "SX",
          "23558": "QJ",
          "23561": "YW",
          "23586": "YW",
          "23614": "YW",
          "23615": "SN",
          "23631": "PB",
          "23646": "ZS",
          "23663": "ZT",
          "23673": "YG",
          "23762": "TD",
          "23769": "ZS",
          "23780": "QJ",
          "23884": "QK",
          "24055": "XH",
          "24113": "DC",
          "24162": "CZ",
          "24191": "GA",
          "24273": "QJ",
          "24324": "NL",
          "24377": "TD",
          "24378": "QJ",
          "24439": "PF",
          "24554": "ZS",
          "24683": "TD",
          "24694": "WE",
          "24733": "LK",
          "24925": "TN",
          "25094": "ZG",
          "25100": "XQ",
          "25103": "XH",
          "25153": "PB",
          "25170": "PB",
          "25179": "KG",
          "25203": "PB",
          "25240": "ZS",
          "25282": "FB",
          "25303": "NA",
          "25324": "KG",
          "25341": "ZY",
          "25373": "WZ",
          "25375": "XJ",
          "25384": "A",
          "25457": "A",
          "25528": "SD",
          "25530": "SC",
          "25552": "TD",
          "25774": "CZ",
          "25874": "CZ",
          "26044": "YW",
          "26080": "WM",
          "26292": "PB",
          "26333": "PB",
          "26355": "ZY",
          "26366": "CZ",
          "26397": "CZ",
          "26399": "QJ",
          "26415": "ZS",
          "26451": "SB",
          "26526": "CZ",
          "26552": "JG",
          "26561": "TD",
          "26588": "JG",
          "26597": "CZ",
          "26629": "ZS",
          "26638": "YL",
          "26646": "XQ",
          "26653": "KG",
          "26657": "XJ",
          "26727": "HG",
          "26894": "CZ",
          "26937": "ZS",
          "26946": "CZ",
          "26999": "KJ",
          "27099": "KJ",
          "27449": "YQ",
          "27481": "XS",
          "27542": "ZS",
          "27663": "ZS",
          "27748": "TS",
          "27784": "SC",
          "27788": "ZD",
          "27795": "TD",
          "27812": "O",
          "27850": "PB",
          "27852": "MB",
          "27895": "SL",
          "27898": "PL",
          "27973": "QJ",
          "27981": "KH",
          "27986": "HX",
          "27994": "XJ",
          "28044": "YC",
          "28065": "WG",
          "28177": "SM",
          "28267": "QJ",
          "28291": "KH",
          "28337": "ZQ",
          "28463": "TL",
          "28548": "DC",
          "28601": "TD",
          "28689": "PB",
          "28805": "JG",
          "28820": "QG",
          "28846": "PB",
          "28952": "TD",
          "28975": "CZ",
          "29100": "A",
          "29325": "QJ",
          "29575": "SL",
          "29602": "FB",
          "30010": "TD",
          "30044": "CX",
          "30058": "PF",
          "30091": "YSP",
          "30111": "YN",
          "30229": "XJ",
          "30427": "SC",
          "30465": "SX",
          "30631": "YQ",
          "30655": "QJ",
          "30684": "QJG",
          "30707": "SD",
          "30729": "XH",
          "30796": "LG",
          "30917": "PB",
          "31074": "NM",
          "31085": "JZ",
          "31109": "SC",
          "31181": "CZ",
          "31192": "MLB",
          "31293": "JQ",
          "31400": "YX",
          "31584": "YJ",
          "31896": "ZN",
          "31909": "ZY",
          "31995": "XJ",
          "32321": "PF",
          "32327": "ZY",
          "32418": "HG",
          "32420": "XQ",
          "32421": "HG",
          "32438": "LG",
          "32473": "GJ",
          "32488": "TD",
          "32521": "QJ",
          "32527": "PB",
          "32562": "ZSQ",
          "32564": "JZ",
          "32735": "ZD",
          "32793": "PB",
          "33071": "PF",
          "33098": "XL",
          "33100": "YA",
          "33152": "PB",
          "33261": "CX",
          "33324": "BP",
          "33333": "TD",
          "33406": "YA",
          "33426": "WM",
          "33432": "PB",
          "33445": "JG",
          "33486": "ZN",
          "33493": "TS",
          "33507": "QJ",
          "33540": "QJ",
          "33544": "CZ",
          "33564": "XQ",
          "33617": "YT",
          "33632": "QJ",
          "33636": "XH",
          "33637": "YX",
          "33694": "WG",
          "33705": "PF",
          "33728": "YW",
          "33882": "SR",
          "34067": "WM",
          "34074": "YW",
          "34121": "QJ",
          "34255": "CZ",
          "34259": "XL",
          "34425": "JH",
          "34430": "XH",
          "34485": "KH",
          "34503": "YS",
          "34532": "HG",
          "34552": "XS",
          "34558": "YE",
          "34593": "ZL",
          "34660": "YQ",
          "34892": "XH",
          "34928": "SC",
          "34999": "QJ",
          "35048": "PB",
          "35059": "SC",
          "35098": "CZ",
          "35203": "TQ",
          "35265": "JX",
          "35299": "JX",
          "35782": "SZ",
          "35828": "YS",
          "35830": "E",
          "35843": "TD",
          "35895": "YG",
          "35977": "MH",
          "36158": "JG",
          "36228": "QJ",
          "36426": "XQ",
          "36466": "DC",
          "36710": "JC",
          "36711": "ZYG",
          "36767": "PB",
          "36866": "SK",
          "36951": "YW",
          "37034": "YX",
          "37063": "XH",
          "37218": "CZ",
          "37325": "CZ",
          "38063": "PB",
          "38079": "TD",
          "38085": "QY",
          "38107": "DC",
          "38116": "TD",
          "38123": "YD",
          "38224": "HG",
          "38241": "XTC",
          "38271": "CZ",
          "38415": "YE",
          "38426": "KH",
          "38461": "YD",
          "38463": "AE",
          "38466": "PB",
          "38477": "XJ",
          "38518": "YT",
          "38551": "WK",
          "38585": "CZ",
          "38704": "XS",
          "38739": "LJ",
          "38761": "GJ",
          "38808": "SQ",
          "39048": "JG",
          "39049": "XJ",
          "39052": "HG",
          "39076": "CZ",
          "39271": "XT",
          "39534": "TD",
          "39552": "TD",
          "39584": "PB",
          "39647": "SB",
          "39730": "LG",
          "39748": "TPB",
          "40109": "ZQ",
          "40479": "ND",
          "40516": "HG",
          "40536": "HG",
          "40583": "QJ",
          "40765": "YQ",
          "40784": "QJ",
          "40840": "YK",
          "40863": "QJG"
      };

      function makePy(str) {
          if (typeof str != "string") {
              throw new Error(-1, "错误");
          }
          var arrResult = [];
          for (var i = 0, len = str.length; i < len; i++) {
              var ch = str.charAt(i);
              arrResult.push(checkCh(ch));
          }
          return mkRslt(arrResult);
      }

      function checkCh(ch) {
          var uni = ch.charCodeAt(0);
          if (uni > 40869 || uni < 19968) {
              return ch; // dealWithOthers(ch);
          }
          return (oMultiDiff[uni] ? oMultiDiff[uni] : (strChineseFirstPY.charAt(uni - 19968)));
      }

      function mkRslt(arr) {
          var arrRslt = [""];
          for (var i = 0, len = arr.length; i < len; i++) {
              var str = arr[i];
              var strlen = str.length;
              if (strlen == 1) {
                  for (var k = 0; k < arrRslt.length; k++) {
                      arrRslt[k] += str;
                  }
              } else {
                  var tmpArr = arrRslt.slice(0);
                  arrRslt = [];
                  for (k = 0; k < strlen; k++) {
                      var tmp = tmpArr.slice(0);
                      for (var j = 0; j < tmp.length; j++) {
                          tmp[j] += str.charAt(k);
                      }
                      arrRslt = arrRslt.concat(tmp);
                  }
              }
          }
          return arrRslt;
      }
      var $body = $(".sortListView");
      var Initials = $body.find('.initials');
      var LetterBox = $body.find('.letter');
      initials();
      $(".initials li").click(function() {
          var _this = $(this);
          var LetterHtml = _this.html();
          LetterBox.html(LetterHtml).fadeIn();

          Initials.css('background', 'rgba(145,145,145,0.6)');

          setTimeout(function() {
              Initials.css('background', 'rgba(145,145,145,0)');
              LetterBox.fadeOut();
          }, 1000);

          var _index = _this.index()
          if (_index == 0) {
              $(".sort_box").blScrollTo();
          } else if (_index == 27) {
              var DefaultTop = $('#default').position().top;
              // $('html,body').animate({scrollTop: DefaultTop + 'px'}, 300); // 点击最后一个滚到#号
              $(".sort_box").scrollTo({
                  toT: DefaultTop
              })
          } else {
              var letter = _this.text();
              if ($('#' + letter).length > 0) {
                  var LetterTop = $('#' + letter)[0].offsetTop;
                  if (LetterTop > 0) {
                    $(".sort_box").blScrollTo({
                        toT: LetterTop
                    })
                  }
              }
          }
      })

      var windowHeight = window.innerHeight;
      var InitHeight = windowHeight;
      // Initials.height(InitHeight);
      var LiHeight = InitHeight / 28;
      Initials.find('li').height(LiHeight);

      function ascSort(a, b) {
          return makePy($(b).find('.num_name').text().charAt(0))[0].toUpperCase() < makePy($(a).find('.num_name').text().charAt(0))[0].toUpperCase() ? 1 : -1;
      }

      function initials() { // 排序
          var SortList = $(".sort_list").length == 0 ? [] : $(".sort_list");
          var SortBox = $(".sort_box");
          SortList.sort(ascSort).appendTo('.sort_box'); // 按首字母排序
          var initials = [];
          var num = 0;
          SortList.each(function(i) {
              var initial = makePy($(this).find('.num_name').text().charAt(0))[0].toUpperCase();
              if (initial >= 'A' && initial <= 'Z') {
                  if (initials.indexOf(initial) === -1) {
                      initials.push(initial);
                  }
              } else {
                  num++;
              }
          });
          for (let j = 0; j < initials.length; j++) {
              $(".sortListView .initials").append("<li>" + initials[j] + "</li>");
          }
          // $(".sortListView .initials").append("<li>#</li>");
          $.each(initials, function(index, value) { // 添加首字母标签
              SortBox.append('<div class="sort_letter" id="' + value + '">' + value + '</div>');
          });

          function addDom(letter, dom, flag, i) {
              console.log(letter)
              if (!flag) {
                  SortList.eq(i).find(".num_name").css("border-bottom", "none");
                  if ($("#" + letter + "wrap").length > 0) {
                      $("#" + letter + "wrap").append(SortList.eq(i));
                  } else {
                      dom.after("<div id='" + letter + "wrap'></div>");
                      $("#" + letter + "wrap").append(SortList.eq(i));
                  }
              } else {
                  if ($("#" + letter + "wrap").length > 0) {
                      $("#" + letter + "wrap").append(SortList.eq(i));
                  } else {
                      dom.after("<div id='" + letter + "wrap'></div>");
                      $("#" + letter + "wrap").append(SortList.eq(i));
                  }
              }
              // 最后 一个没有border
              if (i == SortList.length - 1) {
                  SortList.eq(SortList.length - 1).find(".num_name").css("border", "none");
              }
          }
          if (num != 0) {
              SortBox.append('<div class="sort_letter" id="default">#</div>');
          }
          for (let ke = 0; ke < SortList.length; ke++) { // 插入到对应的首字母后面
              var letter = makePy(SortList.eq(ke).find('.num_name').text().charAt(0))[0].toUpperCase();
              if ((ke + 1) < SortList.length) {
                  var letter2 = makePy(SortList.eq(ke + 1).find('.num_name').text().charAt(0))[0].toUpperCase();
              }
              switch (letter) {
                  case "A":
                      addDom(letter, $("#A"), (letter == letter2), ke);
                      break;
                  case "B":
                      addDom(letter, $("#B"), (letter == letter2), ke);
                      break;
                  case "C":
                      addDom(letter, $("#C"), (letter == letter2), ke);
                      break;
                  case "D":
                      addDom(letter, $("#D"), (letter == letter2), ke);
                      break;
                  case "E":
                      addDom(letter, $("#E"), (letter == letter2), ke);
                      break;
                  case "F":
                      addDom(letter, $("#F"), (letter == letter2), ke);
                      break;
                  case "G":
                      addDom(letter, $("#G"), (letter == letter2), ke);
                      break;
                  case "H":
                      addDom(letter, $("#H"), (letter == letter2), ke);
                      break;
                  case "I":
                      addDom(letter, $("#I"), (letter == letter2), ke);
                      break;
                  case "J":
                      addDom(letter, $("#J"), (letter == letter2), ke);
                      break;
                  case "K":
                      addDom(letter, $("#K"), (letter == letter2), ke);
                      break;
                  case "L":
                      addDom(letter, $("#L"), (letter == letter2), ke);
                      break;
                  case "M":
                      addDom(letter, $("#M"), (letter == letter2), ke);
                      break;
                  case "N":
                      addDom(letter, $("#N"), (letter == letter2), ke);
                      break;
                  case "O":
                      addDom(letter, $("#O"), (letter == letter2), ke);
                      break;
                  case "P":
                      addDom(letter, $("#P"), (letter == letter2), ke);
                      break;
                  case "Q":
                      addDom(letter, $("#Q"), (letter == letter2), ke);
                      break;
                  case "R":
                      addDom(letter, $("#R"), (letter == letter2), ke);
                      break;
                  case "S":
                      addDom(letter, $("#S"), (letter == letter2), ke);
                      break;
                  case "T":
                      addDom(letter, $("#T"), (letter == letter2), ke);
                      break;
                  case "U":
                      addDom(letter, $("#U"), (letter == letter2), ke);
                      break;
                  case "V":
                      addDom(letter, $("#V"), (letter == letter2), ke);
                      break;
                  case "W":
                      addDom(letter, $("#W"), (letter == letter2), ke);
                      break;
                  case "X":
                      addDom(letter, $("#X"), (letter == letter2), ke);
                      break;
                  case "Y":
                      addDom(letter, $("#Y"), (letter == letter2), ke);
                      break;
                  case "Z":
                      addDom(letter, $("#Z"), (letter == letter2), ke);
                      break;
                  default:
                      addDom(letter, $("#default"), (letter == letter2), ke);
                      break;
              }
          };
      }
  })
}
